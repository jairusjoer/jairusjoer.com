---
import Button, { type Props as ButtonProps } from './button.astro';

const { class: className } = Astro.props;

const options: Array<ButtonProps> = [
  {
    variant: 'bold',
    label: 'hello@jairusjoer.com',
    href: 'mailto:hello@jairusjoer.com',
  },
  {
    variant: 'subtle',
    label: 'LinkedIn',
    href: 'https://linkedin.com/in/jairusjoer',
  },
  {
    variant: 'outline',
    label: 'GitHub',
    href: 'https://github.com/jairusjoer',
  },
];
---

<script>
  const button = document.getElementById('copy-email');

  document.addEventListener('DOMContentLoaded', () => {
    button?.addEventListener('click', copyEmail);
  });

  const copyEmail = async () => {
    if (!button) return;

    try {
      await navigator.clipboard.writeText('hello@jairusjoer.com');

      button.title = 'E-Mail Copied';
      button.textContent = '✅';
    } catch (error) {
      button.title = 'Failed to copy E-Mail';
      button.textContent = '❌';
    } finally {
      setTimeout(() => {
        button.title = 'Copy E-Mail';
        button.textContent = '📋';
      }, 1500);
    }
  };
</script>

<section class:list={['flex flex-wrap gap-1 font-medium', className]}>
  {
    options.map((button) => {
      if (button.href?.startsWith('mailto')) {
        return (
          <div class="rounded-inner flex border">
            <Button {...button} />
            <button
              id="copy-email"
              class="rounded-inner w-6.5 cursor-pointer print:hidden"
              title="Copy E-Mail"
            >
              📋
            </button>
          </div>
        );
      }

      return <Button {...button} />;
    })
  }
</section>
